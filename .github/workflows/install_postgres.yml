name: PostgreSQL service example
on: push

jobs:
  # コンテナジョブのラベル
  container-job:
    # コンテナは Linux ベースのオペレーティングシステムで実行しなければならない
    runs-on: ubuntu-latest
    # `container-job` が実行される Docker Hub イメージ
    container: node:10.18-jessie

    # `container-job` で実行するサービスコンテナ
    services:
      # サービスコンテナへのアクセスに使用されるラベル
      postgres:
        # Docker Hub のイメージ
        image: postgres
        # postgres のパスワードを入力する
        env:
          POSTGRES_PASSWORD: postgres
        # postgres が起動するまで待機するようにヘルスチェックを設定する
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # CI テストを実行する前に、リポジトリにコードのコピーをダウンロードする
      - name: Check out repository code
        uses: actions/checkout@v2

      # `package.json` ファイル内のすべての依存関係のクリーンインストールを実行する
      # 詳しい情報については https://docs.npmjs.com/cli/ci.html を参照
      - name: Install dependencies
        run: npm i --save pg

      - name: Connect to PostgreSQL
        # PostgreSQLテーブルを作成し、テーブルにデータを入力してから
        # データを取得するスクリプトを実行する。
        run: node cliant.js
        # `client.js` スクリプトが新しいPostgreSQLクライアントの作成に使う環境変数。
        env:
          # PostgreSQLサービスコンテナとの通信に使われるホスト名
          POSTGRES_HOST: postgres
          # デフォルトのPostgreSQLポート
          POSTGRES_PORT: 5432
